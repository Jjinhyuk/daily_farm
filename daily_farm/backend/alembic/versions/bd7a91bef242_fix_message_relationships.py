"""fix_message_relationships

Revision ID: bd7a91bef242
Revises: fb5dcea26ea5
Create Date: 2024-12-06 18:34:26.272061

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bd7a91bef242'
down_revision: Union[str, None] = 'fb5dcea26ea5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('crop_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('price_per_unit', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['crop_id'], ['crops.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.drop_constraint('crops_farmer_id_fkey', 'crops', type_='foreignkey')
    op.create_foreign_key(None, 'crops', 'users', ['farmer_id'], ['id'], ondelete='CASCADE')
    op.add_column('messages', sa.Column('sender_id', sa.Integer(), nullable=True))
    op.add_column('messages', sa.Column('receiver_id', sa.Integer(), nullable=True))
    op.drop_constraint('messages_user_id_fkey', 'messages', type_='foreignkey')
    op.create_foreign_key(None, 'messages', 'users', ['receiver_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'messages', 'users', ['sender_id'], ['id'], ondelete='CASCADE')
    op.drop_column('messages', 'user_id')
    op.drop_constraint('orders_consumer_id_fkey', 'orders', type_='foreignkey')
    op.drop_constraint('orders_crop_id_fkey', 'orders', type_='foreignkey')
    op.drop_constraint('orders_farmer_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'users', ['farmer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'orders', 'users', ['consumer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('orders', 'crop_id')
    op.drop_column('orders', 'quantity')
    op.alter_column('reviews', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint('reviews_order_id_key', 'reviews', type_='unique')
    op.drop_column('reviews', 'images')
    op.alter_column('users', 'user_type',
               existing_type=postgresql.ENUM('FARMER', 'CUSTOMER', name='usertype'),
               type_=sa.Enum('FARMER', 'CUSTOMER', name='usertype', native_enum=False, create_constraint=True),
               existing_nullable=True)
    op.alter_column('users', 'auth_provider',
               existing_type=postgresql.ENUM('LOCAL', 'GOOGLE', 'KAKAO', name='authprovider'),
               type_=sa.Enum('LOCAL', 'GOOGLE', 'KAKAO', name='authprovider', native_enum=False, create_constraint=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'auth_provider',
               existing_type=sa.Enum('LOCAL', 'GOOGLE', 'KAKAO', name='authprovider', native_enum=False, create_constraint=True),
               type_=postgresql.ENUM('LOCAL', 'GOOGLE', 'KAKAO', name='authprovider'),
               existing_nullable=True)
    op.alter_column('users', 'user_type',
               existing_type=sa.Enum('FARMER', 'CUSTOMER', name='usertype', native_enum=False, create_constraint=True),
               type_=postgresql.ENUM('FARMER', 'CUSTOMER', name='usertype'),
               existing_nullable=True)
    op.add_column('reviews', sa.Column('images', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('reviews_order_id_key', 'reviews', ['order_id'])
    op.alter_column('reviews', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('orders', sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('crop_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_farmer_id_fkey', 'orders', 'users', ['farmer_id'], ['id'])
    op.create_foreign_key('orders_crop_id_fkey', 'orders', 'crops', ['crop_id'], ['id'])
    op.create_foreign_key('orders_consumer_id_fkey', 'orders', 'users', ['consumer_id'], ['id'])
    op.add_column('messages', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.create_foreign_key('messages_user_id_fkey', 'messages', 'users', ['user_id'], ['id'])
    op.drop_column('messages', 'receiver_id')
    op.drop_column('messages', 'sender_id')
    op.drop_constraint(None, 'crops', type_='foreignkey')
    op.create_foreign_key('crops_farmer_id_fkey', 'crops', 'users', ['farmer_id'], ['id'])
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    # ### end Alembic commands ###
